{
  "version": 3,
  "sources": ["../src/main/attributes.ts", "../src/main/state.ts", "../src/main/observers.ts", "../src/main/on.ts", "../src/main/reusable.ts", "../src/main/remove.ts", "../src/main/jot.ts", "../src/main/tags.ts", "../src/main/id.ts", "../src/main/css.ts"],
  "sourcesContent": ["import { hook, type Hook } from \"./mod.ts\";\n\n/**\n *\n * @param attributes\n * @param namespace\n * @returns\n */\nexport function attributes<E extends Element>(\n  attributes: Record<string, unknown>,\n  namespace?: string | null,\n): Hook<E> {\n  namespace ||= null;\n\n  return hook((element) => {\n    for (const [name, value] of Object.entries(attributes)) {\n      if (value == null) {\n        return element.removeAttributeNS(namespace, name);\n      }\n\n      element.setAttributeNS(namespace, name, String(value));\n    }\n  });\n}\n", "/**\n *\n */\nexport interface Accessor<V> {\n  (): V;\n}\n\n/**\n *\n */\nexport interface Mutator<V> {\n  (next: V): void;\n}\n\n/**\n *\n */\nexport interface Supplier<V> {\n  (update?: boolean): V;\n}\n\ntype Observable = [number, Set<symbol>] | [number, Set<symbol>, VoidFunction];\n\nconst context = <Set<symbol>[]>[];\nconst updates = new Set<symbol>();\nconst observables = new WeakMap<symbol, Observable>();\n\nconst byDistance = (a: symbol, b: symbol) => toDistance(a) - toDistance(b);\n\nconst isNonNullable = <V>(value?: V): value is NonNullable<V> => value != null;\n\nconst commit = () => {\n  [...updates]\n    .sort(byDistance)\n    .map(toUpdate)\n    .filter(isNonNullable)\n    .forEach(queueMicrotask);\n\n  updates.clear();\n};\n\nconst defer = (update: symbol) => {\n  if (!updates.has(update)) {\n    if (updates.size === 0) {\n      queueMicrotask(commit);\n    }\n\n    updates.add(update);\n    (getObservers(update) || []).forEach(defer);\n  }\n};\n\nconst getObservable = (id: symbol) => observables.get(id);\n\nconst getObservers = (observable: symbol) => getObservable(observable)?.[1];\n\n/**\n *\n * @param expression\n * @returns\n */\nexport const spy = <V>(expression: () => V): [Accessor<V>, VoidFunction] => {\n  const dependencies = new Set<symbol>();\n\n  context.push(dependencies);\n\n  let value: V;\n\n  try {\n    value = expression();\n  } finally {\n    context.pop();\n  }\n\n  const id = Symbol();\n\n  for (const dependency of dependencies) {\n    getObservers(dependency)?.add(id);\n  }\n\n  observables.set(id, [\n    [...dependencies].map(toDistance).reduce(toMax, -1) + 1,\n    new Set(),\n    () => (value = expression()),\n  ]);\n\n  return [\n    () => (track(id), value),\n    () => {\n      for (const dependency of dependencies) {\n        getObservers(dependency)?.delete(id);\n      }\n\n      dependencies.clear();\n      observables.delete(id);\n    },\n  ];\n};\n\nfunction toDistance(observable: symbol): number {\n  return getObservable(observable)?.[0] || 0;\n}\n\nfunction toMax(a: number, b: number): number {\n  return Math.max(a, b);\n}\n\nfunction toUpdate(observable: symbol): VoidFunction | undefined {\n  return getObservable(observable)?.[2];\n}\n\nfunction track(observable: symbol): void {\n  context[context.length - 1]?.add(observable);\n}\n\n/**\n *\n * @param value\n * @returns\n */\nexport function use<V>(value: V): [Supplier<V>, Mutator<V>] {\n  const id = Symbol();\n\n  observables.set(id, [0, new Set()]);\n\n  return [\n    (update) => (update ? defer(id) : track(id), value),\n    (next) => ((value = next), defer(id)),\n  ];\n}\n", "import { spy } from \"./state.ts\";\n\nconst nodeDisposables = new WeakMap<Node, VoidFunction[]>();\n\n/**\n *\n * @param node\n * @param observers\n */\nexport function addObservers(node: Node, ...observers: VoidFunction[]) {\n  let disposables = nodeDisposables.get(node);\n\n  if (!disposables) {\n    nodeDisposables.set(node, (disposables = []));\n  }\n\n  disposables.push(...observers.map(spy).map(toDisposable));\n}\n\n/**\n *\n * @param node\n * @returns\n */\nexport function removeObservers(node: Node): void {\n  for (const dispose of nodeDisposables.get(node) || []) {\n    dispose();\n  }\n\n  nodeDisposables.delete(node);\n}\n\nfunction toDisposable(derived: [unknown, VoidFunction]): VoidFunction {\n  return derived[1];\n}\n", "import { hook, type Hook } from \"./jot.ts\";\n\nconst listeners = new WeakMap<\n  Node,\n  [\n    string,\n    EventListenerOrEventListenerObject | null,\n    AddEventListenerOptions | boolean | undefined,\n  ][]\n>();\n\n/**\n *\n * @param node\n * @returns\n */\nexport function removeEventListeners(node: Node): void {\n  for (const [type, listener, options] of listeners.get(node) || []) {\n    node.removeEventListener(type, listener, options);\n  }\n}\n\n/**\n *\n * @param type\n * @param listener\n * @param options\n */\nexport function on<N extends Node, T extends keyof E, E = HTMLElementEventMap>(\n  type: T,\n  listener: (this: N, event: E[T]) => unknown,\n  options?: AddEventListenerOptions | boolean,\n): Hook<N>;\n\n/**\n *\n * @param type\n * @param listener\n * @param options\n */\nexport function on<N extends Node>(\n  type: string,\n  listener: EventListenerOrEventListenerObject | null,\n  options?: AddEventListenerOptions | boolean,\n): Hook<N>;\n\nexport function on(\n  type: string,\n  listener: EventListenerOrEventListenerObject | null,\n  options?: AddEventListenerOptions | boolean,\n): Hook<Node> {\n  return hook((node) => {\n    node.addEventListener(type, listener, options);\n\n    if (listeners.get(node)?.push([type, listener, options]) === undefined) {\n      listeners.set(node, [[type, listener, options]]);\n    }\n  });\n}\n", "const reusableNodes = new WeakSet<Node>();\n\n/**\n *\n * @param node\n * @returns\n */\nexport function isReusable(node: Node): boolean {\n  return reusableNodes.has(node);\n}\n\n/**\n *\n * @param node\n * @returns\n */\nexport function reusable<N extends Node>(node: N): N {\n  return reusableNodes.add(node), node;\n}\n", "import { removeObservers } from \"./observers.ts\";\nimport { removeEventListeners } from \"./on.ts\";\nimport { isReusable } from \"./reusable.ts\";\n\n/**\n *\n * @param node\n * @param force\n */\nexport function remove(node: Node, force?: boolean): void {\n  if (!force && isReusable(node)) {\n    return;\n  }\n\n  for (const child of [...node.childNodes]) {\n    remove(child, force);\n  }\n\n  removeObservers(node);\n  removeEventListeners(node);\n  node.parentNode?.removeChild(node);\n}\n", "import { addObservers } from \"./observers.ts\";\nimport { remove } from \"./remove.ts\";\n\n/**\n *\n */\nexport interface Callback<N extends Node> {\n  (node: N): Option<N>;\n}\n\n/**\n *\n */\nexport interface Hook<N extends Node> {\n  [hookTo](node: N): Option<N>;\n}\n\n/**\n *\n */\nexport type Option<N extends Node> =\n  | bigint\n  | boolean\n  | Callback<N>\n  | Hook<N>\n  | Node\n  | null\n  | number\n  | Option<N>[]\n  | Properties<N>\n  | string\n  | symbol\n  | undefined\n  | void;\n\n/**\n *\n */\nexport type Properties<N extends Node> = Partial<Omit<N, \"nodeType\">>;\n\nconst hookTo: unique symbol = Symbol();\n\nfunction apply<N extends Node>(\n  node: N,\n  append: (node: Node) => void,\n  option: Option<N>,\n): void {\n  if (option == null) {\n    return;\n  }\n\n  switch (typeof option) {\n    case \"function\": {\n      return applyCallback(node, append, option);\n    }\n\n    case \"object\": {\n      if (\"nodeType\" in option) {\n        return append(option);\n      }\n\n      const applyObject = apply.bind<\n        undefined,\n        [N, (node: Node) => void],\n        [Option<N>],\n        void\n      >(undefined, node, append);\n\n      if (hookTo in option) {\n        return applyObject(option[hookTo](node));\n      }\n\n      return Array.isArray(option)\n        ? option.forEach(applyObject)\n        : void Object.assign(node, option);\n    }\n  }\n\n  if (node.ownerDocument) {\n    append(node.ownerDocument.createTextNode(String(option)));\n  }\n}\n\nfunction applyCallback<N extends Node>(\n  node: N,\n  append: (node: Node) => void,\n  callback: Callback<N>,\n): void {\n  const children: Node[] = [];\n\n  let start: Text;\n  let end: Text;\n\n  const push = children.push.bind(children);\n\n  function update() {\n    const document = node.ownerDocument;\n\n    if (!document) {\n      return;\n    }\n\n    if (!start) {\n      if (children.length === 0) {\n        return;\n      }\n\n      append((start = document.createTextNode(\"\")));\n      append((end = document.createTextNode(\"\")));\n    }\n\n    const range = document.createRange();\n\n    range.setStartAfter(start);\n    range.setEndBefore(end);\n\n    const contents = range.extractContents();\n\n    setTimeout(remove, 100, contents);\n\n    if (children.length === 0) {\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n\n    fragment.append(...children);\n    range.insertNode(fragment);\n  }\n\n  addObservers(node, () => {\n    apply(node, push, callback(node));\n    update();\n\n    children.length = 0;\n  });\n}\n\n/**\n *\n * @param callback\n * @returns\n */\nexport function hook<N extends Node>(callback: Callback<N>): Hook<N> {\n  return {\n    [hookTo]: callback,\n  };\n}\n\n/**\n *\n * @param node\n * @param options\n * @returns\n */\nexport function jot<N extends Node>(node: N, ...options: Option<N>[]): N {\n  const append = node.appendChild.bind(node);\n  const applyOption = apply.bind<\n    undefined,\n    [N, (node: Node) => void],\n    [Option<N>],\n    void\n  >(undefined, node, append);\n\n  return options.forEach(applyOption), node;\n}\n", "import { jot, type Option } from \"./jot.ts\";\n\n/**\n *\n */\nexport type Tags<E extends Record<keyof E, Node>> = {\n  readonly [T in keyof E]: (...options: Option<E[T]>[]) => E[T];\n};\n\nfunction tag(this: () => Node, ...options: Option<Node>[]): Node {\n  return jot(this(), ...options);\n}\n\n/**\n *\n * @param document\n * @param namespace\n * @returns\n */\nexport function tags(\n  document: Document,\n  namespace?: \"http://www.w3.org/1999/xhtml\",\n): Tags<HTMLElementTagNameMap> & Tags<HTMLElementDeprecatedTagNameMap>;\n\n/**\n *\n * @param document\n * @param namespace\n * @returns\n */\nexport function tags(\n  document: Document,\n  namespace: \"http://www.w3.org/1998/Math/MathML\",\n): Tags<MathMLElementTagNameMap>;\n\n/**\n *\n * @param document\n * @param namespace\n * @returns\n */\nexport function tags(\n  document: Document,\n  namespace: \"http://www.w3.org/2000/svg\",\n): Tags<SVGElementTagNameMap>;\n\n/**\n *\n * @param document\n * @param namespace\n * @returns\n */\nexport function tags(\n  document: Document,\n  namespace: string | null,\n): Tags<Record<string, Element>>;\n\nexport function tags(document: Document, namespace?: string | null) {\n  const createElement =\n    namespace === undefined\n      ? document.createElement.bind(document)\n      : document.createElementNS.bind(document, namespace);\n\n  return new Proxy(\n    {},\n    {\n      get(_, property) {\n        return typeof property === \"string\"\n          ? tag.bind(createElement.bind(undefined, property))\n          : undefined;\n      },\n      set() {\n        return false;\n      },\n    },\n  );\n}\n", "import { hook, type Hook } from \"./jot.ts\";\n\nlet value = 0n;\n\n/**\n *\n * @returns\n */\nexport function id<E extends Element>(): string & Hook<E> {\n  const id = String(value++);\n\n  return Object.assign(\n    id,\n    hook<E>((element) => {\n      element.id = id;\n    }),\n  );\n}\n", "import { id } from \"./id.ts\";\nimport { hook, type Hook } from \"./jot.ts\";\n\n/**\n *\n */\nexport type Style = Partial<StyleProperties> & {\n  [key: string]: string | Style | Style[];\n};\n\n/**\n *\n */\nexport type StyleProperties = Omit<\n  CSSStyleDeclaration,\n  | \"getPropertyPriority\"\n  | \"getPropertyValue\"\n  | \"item\"\n  | \"length\"\n  | \"parentRule\"\n  | \"removeProperty\"\n  | \"setProperty\"\n  | number\n  | SymbolConstructor[\"iterator\"]\n>;\n\nconst bySpace = /\\s+/;\nconst styles = new WeakSet<symbol>();\nconst upperCaseLetters = /([A-Z])/g;\n\nlet stylePrefix: string | undefined;\nlet styleSheet: CSSStyleSheet | null;\n\n/**\n *\n * @param style\n * @param global\n * @returns\n */\nexport function css<E extends Element>(\n  style: Style,\n  global?: false,\n): string & Hook<E>;\n\n/**\n *\n * @param style\n * @param global\n * @returns\n */\nexport function css<E extends Element>(style: Style, global: true): Hook<E>;\n\nexport function css<E extends Element>(\n  style: Style,\n  global?: boolean,\n): Hook<E> {\n  const styleId = Symbol();\n\n  if (global) {\n    return hook((element) => {\n      if (styles.has(styleId)) {\n        return;\n      }\n\n      const styleSheet = getStyleSheet(element.ownerDocument);\n\n      for (const [selector, value] of Object.entries(style)) {\n        if (typeof value === \"string\") {\n          insert(styleSheet, selector, value);\n        } else {\n          for (const style of Array.isArray(value) ? value : [value]) {\n            insert(styleSheet, selector, toString(style));\n          }\n        }\n      }\n\n      styles.add(styleId);\n    });\n  }\n\n  const className = (stylePrefix || \"s\") + id();\n\n  return Object.assign(\n    className,\n    hook<E>((element) => {\n      if (!styles.has(styleId)) {\n        insert(\n          getStyleSheet(element.ownerDocument),\n          `.${className}`,\n          toString(style),\n        );\n      }\n\n      element.classList.add(className);\n    }),\n  );\n}\n\nfunction getStyleSheet(document: Document): CSSStyleSheet {\n  if (styleSheet) {\n    return styleSheet;\n  }\n\n  const style = document.createElement(\"style\");\n\n  document.head.appendChild(style);\n\n  styleSheet = style.sheet;\n\n  return getStyleSheet(document);\n}\n\nfunction insert(styleSheet: CSSStyleSheet, selector: string, rule: string) {\n  styleSheet.insertRule(`${selector}{${rule}}`, styleSheet.cssRules.length);\n}\n\n/**\n *\n * @param prefix\n */\nexport function setStylePrefix(prefix: string): void {\n  stylePrefix = prefix;\n}\n\n/**\n *\n * @param sheet\n */\nexport function setStyleSheet(sheet: CSSStyleSheet | null): void {\n  styleSheet = sheet;\n}\n\n/**\n *\n * @param className\n * @param force\n * @returns\n */\nexport function toggle<E extends Element>(\n  classNames: string,\n  force?: boolean,\n): Hook<E> {\n  return hook((element) => {\n    for (const className of classNames.split(bySpace)) {\n      element.classList.toggle(className, force);\n    }\n  });\n}\n\nfunction toString(style: Style): string {\n  return Object.entries(style).map(toStyleString).join(\"\");\n}\n\nfunction toStyleString([key, style]: [\n  string,\n  string | Style | Style[],\n]): string {\n  if (typeof style === \"string\") {\n    if (!key.startsWith(\"--\")) {\n      key = key.replaceAll(upperCaseLetters, \"-$1\").toLowerCase();\n    }\n\n    return `${key}:${style};`;\n  }\n\n  return (Array.isArray(style) ? style : [style])\n    .map((style) => `${key}{${toString(style)}}`)\n    .join(\"\");\n}\n"],
  "mappings": "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",
  "names": ["attributes", "namespace", "hook", "element", "name", "value", "context", "updates", "observables", "byDistance", "a", "b", "toDistance", "isNonNullable", "value", "commit", "toUpdate", "defer", "update", "getObservers", "getObservable", "id", "observable", "spy", "expression", "dependencies", "dependency", "toMax", "track", "use", "next", "nodeDisposables", "addObservers", "node", "observers", "disposables", "spy", "toDisposable", "removeObservers", "dispose", "derived", "listeners", "removeEventListeners", "node", "type", "listener", "options", "on", "hook", "reusableNodes", "isReusable", "node", "reusable", "remove", "node", "force", "isReusable", "child", "removeObservers", "removeEventListeners", "hookTo", "apply", "node", "append", "option", "applyCallback", "applyObject", "callback", "children", "start", "end", "push", "update", "document", "range", "contents", "remove", "fragment", "addObservers", "hook", "jot", "options", "applyOption", "tag", "options", "jot", "tags", "document", "namespace", "createElement", "_", "property", "value", "id", "hook", "element", "bySpace", "styles", "upperCaseLetters", "stylePrefix", "styleSheet", "css", "style", "global", "styleId", "hook", "element", "getStyleSheet", "selector", "value", "insert", "toString", "className", "id", "document", "rule", "setStylePrefix", "prefix", "setStyleSheet", "sheet", "toggle", "classNames", "force", "toStyleString", "key"]
}
